/*
 * This file is part of QueenBee Project.
 *
 * QueenBee Project is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QueenBee Project is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QueenBee Project.  If not, see <http://www.gnu.org/licenses/>.
 */

set('moduleName', "${project.name}");

configure(subprojects) {
	set('moduleName', "${project.parent.moduleName}-${project.name}");
}

configure(allprojects) {
	apply plugin: 'eclipse'
	
	eclipse {
		project {
			name = "${moduleName}"
		}
	}
	
	beforeEvaluate {
		configurations {
			include
			provided
		}
	}
	
	afterEvaluate {
		if (plugins.hasPlugin(JavaPlugin)) {
			sourceSets {
				main {
					compileClasspath += configurations.include
					compileClasspath += configurations.provided
					runtimeClasspath += configurations.include
					runtimeClasspath += configurations.provided
				}
				test {
					compileClasspath += configurations.include
					compileClasspath += configurations.provided
					runtimeClasspath += configurations.include
					runtimeClasspath += configurations.provided
				}
			}
			
			jar {
				from sourceSets.main.output
				from configurations.include.collect {
					it.isDirectory() ? it : zipTree(it)
				}
			}
			
			javadoc {
				classpath += configurations.include
				classpath += configurations.provided
			}
			
			eclipse {
				classpath {
					plusConfigurations += [
						configurations.include,
						configurations.provided
					]
				}
			}
			
			// Only aggregates Javadocs with custom title
			if (javadoc.title != "${name} API") {
				rootProject.tasks.javadocs {
					source += files(sourceSets.collect {
						srcSet -> srcSet.allJava
					})
					classpath += files(sourceSets*.compileClasspath)
				}
			}
			
			if (jar.extension == 'rar') {
				task includeDependencies(type: Copy) {
					into "${sourceSets.main.output.resourcesDir}"
					from configurations.compile +
							configurations.runtime +
							configurations.include
				}
				processResources.dependsOn includeDependencies
			}
		}
	}
}

task clean << {
	file("${buildDir}").deleteDir()
}

task javadocs(type: Javadoc) {
	title = 'QueenBee API'
	destinationDir = new File("${buildDir}/docs/javadoc")
	options {
		overview = "${projectDir}/javadoc-overview.html"
		links('http://docs.oracle.com/javase/7/docs/api/')
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
